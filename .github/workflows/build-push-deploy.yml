name: Build, Push and Deploy Kisaan.com

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      TARGET_ENV:
        type: choice
        description: 'Please choose the Target environment'
        default: 'test'
        required: true
        options:
            - int
            - test
            - acc
            - prod

      DEPLOYMENT_TYPE:
        type: choice
        description: 'Please select the build only, deploy only or build and deploy'
        default: 'build-and-deploy'
        required: true
        options:
            - build
            - deploy
            - build-and-deploy

env:
    IMAGE_REGISTRY: bwalia
    TARGET_STACK: nextjs
    IMAGE_NAME: kisaan.com
    TARGET_IMAGE_TAG: latest
    TARGET_ENV: ${{ github.event.inputs.TARGET_ENV || 'test' }}
    DEPLOYMENT_TYPE: ${{ github.event.inputs.DEPLOYMENT_TYPE || 'build-and-deploy' }}
    SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      if: ${{ env.DEPLOYMENT_TYPE == 'build' || env.DEPLOYMENT_TYPE == 'build-and-deploy' }}
      uses: actions/checkout@v3
    - name: Build kisaan.com Docker image based on the TARGET PLATFORM Image and push to Docker Hub
      if: ${{ env.DEPLOYMENT_TYPE == 'build' || env.DEPLOYMENT_TYPE == 'build-and-deploy' }}
      run: |
        echo "kisaan.com Docker image builder!"
        echo "Build, tag, and push image to the given Docker Registry."
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWD }}
        docker build -f kisaan-next/Dockerfile.${{ env.TARGET_ENV }} --build-arg TAG=latest -t ${{ env.TARGET_ENV }}-${{ env.TARGET_STACK }} . --no-cache
        docker tag ${{ env.TARGET_ENV }}-${{ env.TARGET_STACK }} ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
        docker push ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TARGET_IMAGE_TAG }}
      shell: bash        

    # - name: Run Docker container
    #   run: |
    #         docker run -d -p 80:80 bwalia/Kisaan.com:latest openresty -g "daemon off;"

    # - name: Verify OpenResty is running
    #   run: |
    #         sleep 10 # Give some time for the server to start
    #         curl -I http://localhost:80

    - name: Slack Notification for kisaan.com release 
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'kisaan.com deployed to https://${{ env.TARGET_ENV }}.kisaan.com/ (${{ env.TARGET_ENV }}) env :rocket:'
        SLACK_TITLE: kisaan.com deployment status
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}         
        
